#com.rminfo.title: 123
#配置输出的地址和输出的级别
#logging.path=D://springbootlog/log
#logging.level.com.favorites=DEBUG
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR


#spring.database1.jdbc-url=jdbc:mysql://localhost:3306/test1?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#spring.database1.username=root
#spring.database1.password=123456
#spring.database1.driver-class-name=com.mysql.jdbc.Driver
#
#
#spring.database2.jdbc-url=jdbc:mysql://localhost:3306/test2?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#spring.database2.username=root
#spring.database2.password=123456
#spring.database2.driver-class-name=com.mysql.jdbc.Driver
#数据库配置文件
spring:
  datasource:
    name: springboot
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filter: stat
    #初始数据源
    shirodb:
      jdbc-url:  jdbc:mysql://localhost:3306/permission?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
      username: root
      password: 123456
      # 可省略驱动配置, sprin-boot 会由url检测出驱动类型
      driverClassName: com.mysql.cj.jdbc.Driver
    #数据源1
    db1:
      jdbc-url:  jdbc:mysql://localhost:3306/test1?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
      username: root
      password: 123456
      # 可省略驱动配置, sprin-boot 会由url检测出驱动类型
      driverClassName: com.mysql.jdbc.Driver
    #数据源2
    db2:
      jdbc-url: jdbc:mysql://localhost:3306/test2?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
      username: root
      password: 123456
      # 可省略驱动配置, sprin-boot 会由url检测出驱动类型
      driverClassName: com.mysql.jdbc.Driver
#  jpa:
#      database: mysql
#      show-sql: true
#      hibernate:
#        #不要再生产环境下配置
#        #ddl-auto: update
#        naming:
#          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl #按字段名字建表
#          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#      properties:
#         hibernate:
#            dialect: org.hibernate.dialect.MySQL5Dialect
  thymeleaf:
      prefix: classpath:/templates/
      check-template-location: true
      suffix: .html
      #使用Html5 标准
      mode: html5
      #mode: LEGACYHTML5
      encoding: UTF-8
      #开发禁用缓存
      cache: false

#  mvc:
#    view:
#      # 定位模板的目录
#      prefix: classpath:/templates/
#      # 给返回的页面添加后缀名
#      suffix: .html
#    static-path-pattern: /static/**

  http:
    #编码格式
    encoding:
      force: true
      charset: UTF-8
      enabled: true



server:
  port: 80
  tomcat:
    uri-encoding: UTF-8

#在application.yml引入log4j2.yml
logging:
  config: classpath:log4j.yml
  level:
      com.rminfo.mapper: trace
      #org.hibernate: ERROR
  #path: D://springbootlog/log


redis:
  shiro:
    host: 127.0.0.1
    port: 6379
    timeout: 5000
    password:


#mybatis:
#  mapper-locations: classpath:mybatis/mapper/**/*.xml
#  type-aliases-package: com.rminfo.model.shiro1
#  configuration:
#      # 使用jdbc的getGeneratedKeys 可以获取数据库自增主键值
#      use-generated-keys: true
#      # 使用列别名替换列名，默认true。如：select name as title from table
#      use-column-label: true
#      # 开启驼峰命名转换，如：Table(create_time) -> Entity(createTime)。不需要我们关心怎么进行字段匹配，mybatis会自动识别`大写字母与下划线`
#      map-underscore-to-camel-case: true

#mybaatis分页插件pagehelper设置
pagehelper:
  helperDialect: mysql
  reasonable: true
  support-methods-arguments: true



# Redis
##默认密码为空
#redis:
#    host: 127.0.0.1
#    # Redis服务器连接端口
#    port: 6379
#    jedis:
#        pool:
#        #连接池最大连接数（使用负值表示没有限制）
#        max-active: 100
#        # 连接池中的最小空闲连接
#        max-idle: 10
#        # 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-wait: 100000
#    # 连接超时时间（毫秒）
#    timeout: 5000
#    #默认是索引为0的数据库
#    database: 0



